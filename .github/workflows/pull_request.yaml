name: Pull Request

on:
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04

    container: goodforgod/amazonlinux-graalvm:23.0.0-java17-amd64


    steps:
      - name: Setup Amazon Linux
        shell: bash
        run: |
          yum update -y
          yum upgrade -y

      - name: Install SDKMAN
        shell: bash
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk version 

      - name: Check GLIGC version
        shell: bash
        run: |
          ldd --version

      - name: Install GIT
        shell: bash
        run: |
          yum install git -y
          git --version

      - name: Install SBT
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install sbt
          sbt sbtVersion
      
      - name: Check SBT
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sbt sbtVersion
      
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.0'

      # - name: Install Native Image
      #   shell: bash
      #   run: |
      #     gu install native-image
      #     native-image --version
        
      - name: Checkout Code
        uses: actions/checkout@v3
      
      # - name: SCALA - Setup JDK
      # # yum install java-17-amazon-corretto-headless -y
      #   uses: actions/setup-java@v3.11.0
      #   with:
      #     distribution: 'corretto'
      #     java-version: '17'
      
      - name: SCALA - Check Fomatting
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sbt -v "scalafmtCheckAll;"
      
      - name: SCALA - Compile Code
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sbt -v "compile;"

      - name: SCALA - Unit Tests
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sbt -v "test;"
      
      

      - name: GO - Install dependencies
        run: |
          cd src_go/download/check_status
          go get .
          go mod tidy
          cd ../../../

          cd src_go/download/initiate
          go get .
          go mod tidy
          cd ../../../

          cd src_go/search/check_status
          go get .
          go mod tidy
          cd ../../../   

          cd src_go/search/initiate
          go get .
          go mod tidy
          cd ../../../          
  
      - name: Install Python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install AWS CLI
        shell: bash
        run: |
          pip install awscli
          pip install awscli-local
          export AWS_ACCESS_KEY_ID="test"
          export AWS_SECRET_ACCESS_KEY="test"
          export AWS_DEFAULT_REGION="us-east-1"
          # aws configure --profile default
          aws configure set aws_access_key_id "test" --profile default
          aws configure set aws_secret_access_key "test" --profile default
          aws configure set default.region "us-east-1" --profile default
      
      - name: Install SamLocal 
        shell: bash
        run: pip install aws-sam-cli-local
      
      # - name: SCALA - Integration Tests
      #   shell: bash
      #   run: |
      #     docker compose -f ./src/it/resources/docker-compose.yaml --env-file ./src/it/resources/.env up -d
      #     sleep 10s          
      #     awslocal  s3api create-bucket --bucket chessfinder
      #     # samlocal deploy --template-file template_resources.yaml --stack-name chessfinder --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
      #     samlocal deploy --template-file .infrastructure/db.yaml --stack-name chessfinder_dyanmodb --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
      #     samlocal deploy --template-file .infrastructure/queue.yaml --stack-name chessfinder_sqs --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
      #     sbt -v "IntegrationTest / test;"
      #     docker compose -f ./src/it/resources/docker-compose.yaml down

      - name: GO - Test
        shell: bash
        run: |
          docker compose -f ./src/it/resources/docker-compose.yaml --env-file ./src/it/resources/.env up -d
          sleep 10s          
          awslocal  s3api create-bucket --bucket chessfinder
          # samlocal deploy --template-file template_resources.yaml --stack-name chessfinder --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
          samlocal deploy --template-file .infrastructure/db.yaml --stack-name chessfinder_dyanmodb --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
          samlocal deploy --template-file .infrastructure/queue.yaml --stack-name chessfinder_sqs --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
          go test ./src_go/download/check_status/... -v
          go test ./src_go/download/initiate/... -v
          go test ./src_go/search/check_status/... -v
          cd src_go/search/initiate
          go test ./... -v
          cd ../../../
          docker compose -f ./src/it/resources/docker-compose.yaml down
