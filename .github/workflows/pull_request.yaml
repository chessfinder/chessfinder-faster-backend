name: Pull Request

on:
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:    
      - name: Check GLIGC version
        shell: bash
        run: |
          ldd --version

      - name: Install SDKMAN
        shell: bash
        run: curl -s "https://get.sdkman.io" | bash > /dev/null

      - name: Install GraalVM JDK
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 17.0.8-graal > /dev/null
          echo "JAVA_HOME=$HOME/.sdkman/candidates/java/current" >> $GITHUB_ENV
          echo "$HOME/.sdkman/candidates/java/current/bin" >> $GITHUB_PATH
     
      - name: Install SBT
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install sbt 1.8.2 > /dev/null
          echo "$HOME/.sdkman/candidates/sbt/current/bin" >> $GITHUB_PATH 

      - name: Install SCALA
        shell: bash
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install scala 3.3.0 > /dev/null
          echo "$HOME/.sdkman/candidates/scala/current/bin" >> $GITHUB_PATH
      
      - name: Install Go
        shell: bash
        run: |
          curl -O https://dl.google.com/go/go1.21.1.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go1.21.1.linux-amd64.tar.gz
          rm go1.21.1.linux-amd64.tar.gz
          echo "/usr/local/go/bin" >> $GITHUB_PATH
        
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SCALA - Check Fomatting
        shell: bash
        run: |
          sbt -v "core/scalafmtCheckAll;"
      
      - name: SCALA - Compile Code
        shell: bash
        run: |
          sbt -v "core/compile;"

      - name: SCALA - Unit Tests
        shell: bash
        run: |
          sbt -v "core/test;"
      
      - name: SCALA - Packaging Code
        shell: bash
        run: |
          sbt -v "core/GraalVMSharedLib/packageBin;"
          cp -r ./src_core/target/graalvm-shared-lib/* ./src_go/search/initiate/validation/
          cp -r ./src_core/target/graalvm-shared-lib/* ./src_go/search/process/searcher/
      
      - name: GO - Install dependencies
        run: |
          cd src_go/download/check_status
          go get .
          go mod tidy
          cd ../../../

          cd src_go/download/initiate
          go get .
          go mod tidy
          cd ../../../

          cd src_go/download/process
          go get .
          go mod tidy
          cd ../../../

          cd src_go/search/check_status
          go get .
          go mod tidy
          cd ../../../   

          cd src_go/search/initiate
          go get .
          go mod tidy
          cd ../../../     

          cd src_go/search/process
          go get .
          go mod tidy
          cd ../../../
                
      - name: Install AWS CLI
        shell: bash
        run: |
          pip install awscli
          pip install awscli-local
          export AWS_ACCESS_KEY_ID="test"
          export AWS_SECRET_ACCESS_KEY="test"
          export AWS_DEFAULT_REGION="us-east-1"
          # aws configure --profile default
          aws configure set aws_access_key_id "test" --profile default
          aws configure set aws_secret_access_key "test" --profile default
          aws configure set default.region "us-east-1" --profile default
      
      - name: Install SamLocal 
        shell: bash
        run: pip install aws-sam-cli-local

      - name: GO - Test
        shell: bash
        run: |
          docker compose -f ./src/it/resources/docker-compose.yaml --env-file ./src/it/resources/.env up -d
          sleep 10s          
          awslocal  s3api create-bucket --bucket chessfinder
          # samlocal deploy --template-file template_resources.yaml --stack-name chessfinder --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
          samlocal deploy --template-file .infrastructure/db.yaml --stack-name chessfinder_dynamodb --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
          samlocal deploy --template-file .infrastructure/queue.yaml --stack-name chessfinder_sqs --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --s3-bucket chessfinder
          go test ./src_go/details/db/... -v
          go test ./src_go/details/api/... -v
          go test ./src_go/details/queue/... -v
          
          go test ./src_go/download/check_status/... -v
          go test ./src_go/download/initiate/... -v
          go test ./src_go/download/process/... -v
          go test ./src_go/search/check_status/... -v
          cd src_go/search/initiate
          go test ./... -v
          cd ../../../

          cd src_go/search/process
          go test ./... -v
          cd ../../../
          docker compose -f ./src/it/resources/docker-compose.yaml down
