AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  TheStackName:
    Type: String
    Description: The name of the stack
  ChessfinderLambdaRoleArn:
    Type: String
    Description: The ARN of the role that allows the lambda to execute
  NotificationQueueArn:
    Type: String
    Description: The ARN of the queue that receives the notifications
  NotificationTopicArn:
    Type: String
    Description: The ARN of the topic that sends the notifications

Resources:
  ProfileIsNotFound:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions: 
        - !Ref NotificationTopicArn
      AlarmDescription: 'Profile not found in chess.com'
      AlarmName: !Sub "${TheStackName}-ProfileIsNotFound"
      ComparisonOperator: 'GreaterThanThreshold'
      DatapointsToAlarm: 2
      Dimensions: 
        - Name: Action
          Value: GetProfile
        - Name: StatusCode
          Value: 404
      EvaluationPeriods: 3
      MetricName: ChessDotComMeter
      Namespace: !Ref TheStackName
      OKActions: 
        - !Ref NotificationTopicArn
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: 'notBreaching'
      Unit: Count

  ProfileIsSearched:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions: 
        - !Ref NotificationTopicArn
      AlarmDescription: 'Profile checked in chess.com'
      AlarmName: !Sub "${TheStackName}-ProfileIsSearched"
      ComparisonOperator: 'GreaterThanThreshold'
      DatapointsToAlarm: 1
      Dimensions: 
        - Name: Action
          Value: GetProfile
      EvaluationPeriods: 1
      MetricName: ChessDotComMeter
      Namespace: !Ref TheStackName
      OKActions: 
        - !Ref NotificationTopicArn
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: 'notBreaching'
      Unit: Count

  TelegramBotApiKey:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Name: !Sub "/${TheStackName}/notification/telegram/bot-api-key"
      Tier: Standard
      Type: String
      Value: "x"
  
  TelegramChatId:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Name: !Sub "/${TheStackName}/notification/telegram/chat-id"
      Tier: Standard
      Type: String
      Value: "x"
  
  TelegramInsightsTopicId:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Name: !Sub "/${TheStackName}/notification/telegram/insights-topic-id"
      Tier: Standard
      Type: String
      Value: "x"

  TelegramHealthTopicId:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Name: !Sub "/${TheStackName}/notification/telegram/health-topic-id"
      Tier: Standard
      Type: String
      Value: "x"

  NotifierLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/${TheStackName}/Notifier"
      RetentionInDays: 7

  NotifierFunction:
    Properties:
      FunctionName: !Sub ${TheStackName}-Notifier
      MemorySize: 256
      Events:
        NotificationCommand:
          Properties:
            Queue: !Ref NotificationQueueArn
            BatchSize: 10
          Type: SQS
      Timeout: 60
      Architectures: ["arm64"]
      Runtime: "provided.al2"
      CodeUri: ../src_go/details/notification/subscriber/notification.zip
      Handler: bootstrap
      Environment:
        Variables:
          THE_STACK_NAME: !Ref TheStackName
          TELEGRAM_URL: "https://api.telegram.org"
          TELEGRAM_BOT_API_KEY: !Sub '{{resolve:ssm:${TelegramBotApiKey}}}'
          TELEGRAM_CHAT_ID: !Sub '{{resolve:ssm:${TelegramChatId}}}'
          TELEGRAM_REPORT_TOPIC_ID: !Sub '{{resolve:ssm:${TelegramInsightsTopicId}}}'
          TELEGRAM_ALARM_TOPIC_ID: !Sub '{{resolve:ssm:${TelegramHealthTopicId}}}'
      Role: !Ref ChessfinderLambdaRoleArn
      LoggingConfig:
        LogFormat: JSON
        LogGroup: !Ref NotifierLogs
    Type: AWS::Serverless::Function
    DependsOn: 
      - TelegramBotApiKey
      - TelegramChatId
      - TelegramInsightsTopicId
      - TelegramHealthTopicId
